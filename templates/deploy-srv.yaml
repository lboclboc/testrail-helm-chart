apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: srv
  name: srv
spec:
  replicas: {{ .Values.srv.replicaCount }}
  selector:
    matchLabels:
      service: srv
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        network/testrail: "true"
        service: srv
    spec:
      containers:
        - image: "{{ .Values.srv.image.repository }}/{{ .Values.srv.image.tag }}"
          imagePullPolicy: {{ .Values.srv.image.pullPolicy }}
          name: srv
          ports:
            - containerPort: 80
          resources:
{{ toYaml .Values.srv.resources | indent 12 }}
    {{- if .Values.srv.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.srv.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.srv.tolerations }}
      tolerations:
{{ toYaml .Values.srv.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.srv.affinity }}
      affinity:
{{ toYaml .Values.srv.affinity | indent 8 }}
    {{- end }}
          volumeMounts:
            - mountPath: /var/www/testrail/config/
              name: testrail-config
            - mountPath: /opt/testrail
              name: testrail-opt
      restartPolicy: Always
      volumes:
        - name: testrail-config
          persistentVolumeClaim:
            claimName: testrail-config
        - name: testrail-opt
          persistentVolumeClaim:
            claimName: testrail-opt